@startuml

title __VIEWMODELS's Class Diagram__\n

  package no.nordicsemi.android.blinky {
    package no.nordicsemi.android.blinky.viewmodels {
      class BlinkyViewModel {
          - mDevice : BluetoothDevice
          - mConnectionState : MutableLiveData<String>
          - mIsConnected : MutableLiveData<Boolean>
          - mIsSupported : MutableLiveData<Boolean>
          - mOnDeviceReady : MutableLiveData<Void>
          - mLEDState : MutableLiveData<Boolean>
          - mButtonState : MutableLiveData<Boolean>
          + isDeviceReady()
          + getConnectionState()
          + isConnected()
          + getButtonState()
          + getLEDState()
          + isSupported()
          + BlinkyViewModel()
          + connect()
          + reconnect()
          - disconnect()
          + toggleLED()
          # onCleared()
          + onButtonStateChanged()
          + onLedStateChanged()
          + onDeviceConnecting()
          + onDeviceConnected()
          + onDeviceDisconnecting()
          + onDeviceDisconnected()
          + onLinkLossOccurred()
          + onServicesDiscovered()
          + onDeviceReady()
          + onBondingRequired()
          + onBonded()
          + onBondingFailed()
          + onError()
          + onDeviceNotSupported()
      }
    }
  }
  

  package no.nordicsemi.android.blinky {
    package no.nordicsemi.android.blinky.viewmodels {
      class DevicesLiveData {
          {static} - FILTER_UUID : ParcelUuid
          {static} - FILTER_RSSI : int
          - mDevices : List<DiscoveredBluetoothDevice>
          - mFilteredDevices : List<DiscoveredBluetoothDevice>
          - mFilterUuidRequired : boolean
          - mFilterNearbyOnly : boolean
          ~ DevicesLiveData()
          ~ bluetoothDisabled()
          ~ filterByUuid()
          ~ filterByDistance()
          ~ deviceDiscovered()
          + clear()
          ~ applyFilter()
          - indexOf()
          - matchesUuidFilter()
          - matchesNearbyFilter()
      }
    }
  }
  

  package no.nordicsemi.android.blinky {
    package no.nordicsemi.android.blinky.viewmodels {
      class ScannerStateLiveData {
          - mScanningStarted : boolean
          - mHasRecords : boolean
          - mBluetoothEnabled : boolean
          - mLocationEnabled : boolean
          ~ ScannerStateLiveData()
          ~ refresh()
          ~ scanningStarted()
          ~ scanningStopped()
          ~ bluetoothEnabled()
          ~ bluetoothDisabled()
          ~ setLocationEnabled()
          ~ recordFound()
          ~ isScanning()
          + hasRecords()
          + isBluetoothEnabled()
          + isLocationEnabled()
          + clearRecords()
      }
    }
  }
  

  package no.nordicsemi.android.blinky {
    package no.nordicsemi.android.blinky.viewmodels {
      class ScannerViewModel {
          {static} - PREFS_FILTER_UUID_REQUIRED : String
          {static} - PREFS_FILTER_NEARBY_ONLY : String
          - mPreferences : SharedPreferences
          - scanCallback : ScanCallback
          - mLocationProviderChangedReceiver : BroadcastReceiver
          - mBluetoothStateBroadcastReceiver : BroadcastReceiver
          + getDevices()
          + getScannerState()
          + ScannerViewModel()
          # onCleared()
          + isUuidFilterEnabled()
          + isNearbyFilterEnabled()
          + refresh()
          + filterByUuid()
          + filterByDistance()
          + startScan()
          + stopScan()
          - registerBroadcastReceivers()
      }
    }
  }
  

  package no.nordicsemi.android.blinky {
    package no.nordicsemi.android.blinky.viewmodels {
      class SingleLiveEvent {
          {static} - TAG : String
          - mPending : AtomicBoolean
          + observe()
          + setValue()
          + call()
      }
    }
  }
  

  BlinkyViewModel -up-|> BlinkyManagerCallbacks
  BlinkyViewModel -up-|> AndroidViewModel
  BlinkyViewModel o-- BlinkyManager : mBlinkyManager
  DevicesLiveData -up-|> LiveData
  AlwaysActiveObserver -up-|> ObserverWrapper
  LifecycleBoundObserver -up-|> GenericLifecycleObserver
  LifecycleBoundObserver -up-|> ObserverWrapper
  ScannerStateLiveData -up-|> LiveData
  AlwaysActiveObserver -up-|> ObserverWrapper
  LifecycleBoundObserver -up-|> GenericLifecycleObserver
  LifecycleBoundObserver -up-|> ObserverWrapper
  ScannerViewModel -up-|> AndroidViewModel
  ScannerViewModel o-- DevicesLiveData : mDevicesLiveData
  ScannerViewModel o-- ScannerStateLiveData : mScannerStateLiveData
  SingleLiveEvent -up-|> MutableLiveData
  AlwaysActiveObserver -up-|> ObserverWrapper
  LifecycleBoundObserver -up-|> GenericLifecycleObserver
  LifecycleBoundObserver -up-|> ObserverWrapper


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
